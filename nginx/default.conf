upstream bitwarden {
    server bw-web:5000;
}

upstream intranet {
    server web:8000;
}

upstream prometheus {
    server prometheus:9090;
}

upstream snipe-it {
    server snipe-it:443 max_fails=0;
}

server {
    listen 443 ssl http2 default_server;
    server_name intranet.redbutte.utah.edu;

    ssl_certificate /etc/ssl/certs/intranet_redbutte_utah_edu_cert.cer;
    ssl_certificate_key /etc/ssl/certs/intranet.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    add_header Strict-Transport-Security max-age=157680000;
    ssl_stapling_verify on;
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    location /static {
        alias /home/static;
    }

    location /media {
        alias /home/media;
    }

    # Prometheus settings
    location /prometheus/ {
        proxy_pass http://prometheus;
    }


    location / {
        proxy_pass http://intranet;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

}

# Snipe-IT settings
server {
    listen 443 ssl http2;
    server_name snipeit.intranet.redbutte.utah.edu;

    ssl_certificate /etc/ssl/certs/intranet_redbutte_utah_edu_cert_snipeit.cer;
    ssl_certificate_key /etc/ssl/certs/intranet.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Snipe-IT settings
    location / {
        proxy_http_version 1.1;
        client_max_body_size 100M;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Frame-Options SAMEORIGIN;
        proxy_buffers 256 16k;
        proxy_buffer_size 16k;
        proxy_read_timeout 600s;
        proxy_pass https://snipe-it;
    }
}

# Redirect Snipe IT requests to HTTPS
server {
    listen 80;
    server_name snipeit.intranet.redbutte.utah.edu;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Redirect intranet requests to HTTPS
server {
    listen 80;
    server_name intranet.redbutte.utah.edu;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Bitwarden server blocks
server {
    listen 80;
    listen [::]:80;
    server_name bitwarden.intranet.redbutte.utah.edu;

    return 301 https://bitwarden.intranet.redbutte.utah.edu$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name bitwarden.intranet.redbutte.utah.edu;

    # Using Snipe cert since it's a wildcard cert
    ssl_certificate /etc/ssl/certs/intranet_redbutte_utah_edu_cert_snipeit.cer;
    ssl_certificate_key /etc/ssl/certs/intranet.key;
    ssl_session_timeout 30m;
    #ssl_session_cache shared:SSL:20m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
    # Enables server-side protection from BEAST attacks
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # Fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling_verify on;

    # Verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/certs/intranet_redbutte_utah_edu_interm.cer;
    resolver 1.1.1.1 1.0.0.1 9.9.9.9 149.112.112.112 valid=300s;

    # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack. 6 months age
    add_header Strict-Transport-Security max-age=15768000;
    add_header Referrer-Policy same-origin;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    location / {
        # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack. 6 months age
        add_header Strict-Transport-Security max-age=15768000;
        add_header Referrer-Policy same-origin;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com https://www.gravatar.com; child-src 'self' https://*.duosecurity.com; frame-src 'self' https://*.duosecurity.com; connect-src 'self' wss://bitwarden.intranet.redbutte.utah.edu https://api.pwnedpasswords.com https://twofactorauth.org; object-src 'self' blob:;";
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Robots-Tag "noindex, nofollow";
        proxy_pass http://bitwarden;
    }

    location /alive {
        return 200 'alive';
        add_header Content-Type text/plain;
    }

    location = /app-id.json {
        proxy_pass http://bw-web:5000/app-id.json;
        # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack. 6 months age
        add_header Strict-Transport-Security max-age=15768000;
        add_header Referrer-Policy same-origin;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        proxy_hide_header Content-Type;
        add_header Content-Type $fido_content_type;
    }

    location = /duo-connector.html {
        proxy_pass http://bw-web:5000/duo-connector.html;
    }

    location = /u2f-connector.html {
        proxy_pass http://bw-web:5000/u2f-connector.html;
    }

    location /attachments/ {
        proxy_pass http://attachments:5000/;
    }

    location /api/ {
        proxy_pass http://bw-api:5000/;
    }

    location /identity/ {
        proxy_pass http://bw-identity:5000/;
    }

    #  location /sso/ {
    #    proxy_pass http://sso:5000/;
    #  }

    location /icons/ {
        proxy_pass http://icons:5000/;
    }

    location /notifications/ {
        proxy_pass http://notifications:5000/;
    }

    location /notifications/hub {
        proxy_pass http://notifications:5000/hub;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location /events/ {
        proxy_pass http://events:5000/;
    }

    location /admin {
        proxy_pass http://bw-admin:5000;
        # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack. 6 months age
        add_header Strict-Transport-Security max-age=15768000;
        add_header Referrer-Policy same-origin;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options SAMEORIGIN;
    }
}
